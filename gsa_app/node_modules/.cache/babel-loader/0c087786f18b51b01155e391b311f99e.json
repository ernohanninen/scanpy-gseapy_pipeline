{"ast":null,"code":"var _jsxFileName = \"/home/ernohanninen/binp29_project_v2/gsa_app/src/components/FileUploader1.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Component } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from \"react-router-dom\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \".././App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FileUploader1 = () => {\n  _s();\n\n  const [file1, setFile1] = useState([]);\n  const [file2, setFile2] = useState(); //After file has uploaded to web page, read the file to variable\n\n  function handleChange1(event) {\n    setFile1(event.target.files);\n  }\n\n  function handleChange2(event) {\n    setFile2(event.target.files[0]);\n  }\n\n  f; //When submit button is clicked this function is executed\n  //THis function sends the file t server\n\n  function handleSubmit1(event) {\n    event.preventDefault(); //Define the url where the files are send\n\n    const url = '/uploadFile'; //Uploading the files to formData object\n\n    const formData1 = new FormData();\n    formData1.append('file1', file1[0]);\n    formData1.append('file2', file1[1]);\n    formData1.append('file3', file1[2]);\n    formData1.append(\"geneSetFile\", file2); //displaying new components to user \n\n    document.getElementById('main').style.display = 'none';\n    document.getElementById('load').style.display = 'block'; //send the files to server\n\n    axios.post(url, formData1).then(response => {\n      console.log(\"Analysis is ready\"); //When server returns the results, displaying new components to user  \n\n      document.getElementById('load').style.display = 'none';\n      document.getElementById('results').style.display = 'block';\n      /*\n      This code is for displaying the image on the screen (doesn't work)\n      console.log(response)\n      \n      listOfImages = []\n      const obj = JSON.parse(JSON.stringify(response));\n      \n       for(var i=0;i<obj.data.files.length;i++){\n          listOfImages.push(obj.data.files[i])\n          console.log(obj.data.files[i])\n          image = obj.data.files[i]\n      }*/\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fileUploader1\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit1,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Submit 10xGenomics files:\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          multiple: true,\n          type: \"file\",\n          accept: \".mtx, .tsv\",\n          onChange: handleChange1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 59\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Submit gene set:\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleChange2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 50\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        pattern: \"[0-9]*\",\n        onInput: handleChange3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Run analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 62\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FileUploader1, \"H15l7nduJPTW8DCigWTrqlumqbE=\");\n\n_c = FileUploader1;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUploader1\");","map":{"version":3,"sources":["/home/ernohanninen/binp29_project_v2/gsa_app/src/components/FileUploader1.js"],"names":["React","useState","Component","axios","useNavigate","ReactDOM","App","FileUploader1","file1","setFile1","file2","setFile2","handleChange1","event","target","files","handleChange2","f","handleSubmit1","preventDefault","url","formData1","FormData","append","document","getElementById","style","display","post","then","response","console","log","handleChange3"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,GAAT,QAAoB,UAApB;;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAE/B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,EAAlC,CAH+B,CAK/B;;AACA,WAASW,aAAT,CAAuBC,KAAvB,EAA8B;AAC5BJ,IAAAA,QAAQ,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACD;;AACD,WAASC,aAAT,CAAuBH,KAAvB,EAA8B;AAC5BF,IAAAA,QAAQ,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAD,CAAR;AACD;;AAEDE,EAAAA,CAAC,CAb8B,CAgB/B;AACA;;AACA,WAASC,aAAT,CAAuBL,KAAvB,EAA8B;AAE5BA,IAAAA,KAAK,CAACM,cAAN,GAF4B,CAG5B;;AACA,UAAMC,GAAG,GAAG,aAAZ,CAJ4B,CAK5B;;AACA,UAAMC,SAAS,GAAG,IAAIC,QAAJ,EAAlB;AACAD,IAAAA,SAAS,CAACE,MAAV,CAAiB,OAAjB,EAA0Bf,KAAK,CAAC,CAAD,CAA/B;AACAa,IAAAA,SAAS,CAACE,MAAV,CAAiB,OAAjB,EAA0Bf,KAAK,CAAC,CAAD,CAA/B;AACAa,IAAAA,SAAS,CAACE,MAAV,CAAiB,OAAjB,EAA0Bf,KAAK,CAAC,CAAD,CAA/B;AACAa,IAAAA,SAAS,CAACE,MAAV,CAAiB,aAAjB,EAAgCb,KAAhC,EAV4B,CAY5B;;AACAc,IAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,KAAhC,CAAsCC,OAAtC,GAAgD,MAAhD;AACAH,IAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,KAAhC,CAAsCC,OAAtC,GAAgD,OAAhD,CAd4B,CAgB5B;;AACAxB,IAAAA,KAAK,CAACyB,IAAN,CAAWR,GAAX,EAAgBC,SAAhB,EAA2BQ,IAA3B,CAAiCC,QAAD,IAAc;AAE5CC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAF4C,CAG3C;;AACDR,MAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,KAAhC,CAAsCC,OAAtC,GAAgD,MAAhD;AACAH,MAAAA,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,KAAnC,CAAyCC,OAAzC,GAAmD,OAAnD;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEK,KAnBC;AAoBH;;AAEC,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BAIQ;AAAA;AAAA;AAAA;AAAA,YAJR,eAKQ;AAAM,MAAA,QAAQ,EAAET,aAAhB;AAAA,8BACE;AAAA,qEAAwC;AAAO,UAAA,QAAQ,MAAf;AAAgB,UAAA,IAAI,EAAC,MAArB;AAA4B,UAAA,MAAM,EAAC,YAAnC;AAAiD,UAAA,QAAQ,EAAEN;AAA3D;AAAA;AAAA;AAAA;AAAA,gBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,4DAA+B;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAEI;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,OAAO,EAAC,QAA3B;AAAoC,QAAA,OAAO,EAAEiB;AAA7C;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAI6C;AAAA;AAAA;AAAA;AAAA,cAJ7C;AAAA;AAAA;AAAA;AAAA;AAAA,YALR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAzEM;;GAAM1B,a;;KAAAA,a","sourcesContent":["import React, {useState, Component} from 'react';\nimport axios from 'axios';\nimport { useNavigate } from \"react-router-dom\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \".././App\"\n\nexport const FileUploader1 = () => {\n\n    const [file1, setFile1] = useState([])\n    const [file2, setFile2] = useState()\n\n    //After file has uploaded to web page, read the file to variable\n    function handleChange1(event) {\n      setFile1(event.target.files)    \n    }\n    function handleChange2(event) {\n      setFile2(event.target.files[0])\n    }\n\n    f\n\n \n    //When submit button is clicked this function is executed\n    //THis function sends the file t server\n    function handleSubmit1(event) {\n      \n      event.preventDefault()\n      //Define the url where the files are send\n      const url = '/uploadFile'; \n      //Uploading the files to formData object\n      const formData1 = new FormData();   \n      formData1.append('file1', file1[0]);\n      formData1.append('file2', file1[1]);\n      formData1.append('file3', file1[2]);\n      formData1.append(\"geneSetFile\", file2)\n\n      //displaying new components to user \n      document.getElementById('main').style.display = 'none';\n      document.getElementById('load').style.display = 'block';\n\n      //send the files to server\n      axios.post(url, formData1).then((response) => {\n       \n        console.log(\"Analysis is ready\")\n         //When server returns the results, displaying new components to user  \n        document.getElementById('load').style.display = 'none';\n        document.getElementById('results').style.display = 'block';\n        /*\n        This code is for displaying the image on the screen (doesn't work)\n        console.log(response)\n        \n        listOfImages = []\n        const obj = JSON.parse(JSON.stringify(response));\n        \n\n        for(var i=0;i<obj.data.files.length;i++){\n            listOfImages.push(obj.data.files[i])\n            console.log(obj.data.files[i])\n            image = obj.data.files[i]\n        }*/      \n    });\n  }\n\n    return(\n        <div className='fileUploader1'>          \n                {\n                // matrix.mtx, barcodes.tsv, features.tsv (genes.tsv)\n                }               \n                <br></br>\n                <form onSubmit={handleSubmit1}>          \n                  <p>Submit 10xGenomics files:&nbsp;&nbsp;<input multiple type=\"file\" accept=\".mtx, .tsv\"  onChange={handleChange1}/></p>\n                  <p>Submit gene set:&nbsp;&nbsp;<input type=\"file\" onChange={handleChange2}/></p>\n                  <input type=\"text\" pattern=\"[0-9]*\" onInput={handleChange3} />\n                  <button type=\"submit\">Run analysis</button><br></br>      \n                </form>      \n            \n        </div>\n    );\n    \n};"]},"metadata":{},"sourceType":"module"}